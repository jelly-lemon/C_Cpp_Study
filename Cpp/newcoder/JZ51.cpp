/**
 * 描述
给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],其中B中的元素B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]。不能使用除法。（注意：规定B[0] = A[1] * A[2] * ... * A[n-1]，B[n-1] = A[0] * A[1] * ... * A[n-2];）
对于A长度为1的情况，B无意义，故而无法构建，因此该情况不会存在。

 示例1
输入：[1,2,3,4,5]
返回值：[120,60,40,30,24]
 */

/**
    读题：B[i] 就是少了 A[i] 的连续乘积
    不能使用除法。

    思路：两重 for 循环完成，O(n^2)，最直接的方法

    运行时间：3ms
超过31.53% 用C++提交的代码
占用内存：584KB
超过18.87%用C++提交的代码
    */
vector<int> multiply(const vector<int>& A) {
    vector<int> B;

    for (int i = 0; i < A.size(); i++) {
        int n = 1;
        for (int j = 0; j < A.size(); j++) {
            if (i != j) {
                n *= A[j];
            }
        }
        B.push_back(n);
    }

    return B;
}